name: Release

on:
  push:
    tags: ["v*"]

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: snacc-cli-linux-x64.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: snacc-cli-windows-x64.zip
          - target: x86_64-apple-darwin
            os: macos-latest
            name: snacc-cli-macos-x64.tar.gz
          - target: aarch64-apple-darwin
            os: macos-latest
            name: snacc-cli-macos-arm64.tar.gz

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

    - name: Build binary
      working-directory: ./snacc-cli
      run: cargo build --release --target ${{ matrix.target }}

    - name: Debug - Complete directory structure
      run: |
        echo "=== Current directory ==="
        pwd
        echo
        echo "=== Root directory contents ==="
        ls -la
        echo
        echo "=== Find all snacc-cli binaries ==="
        find . -name "snacc-cli*" -type f 2>/dev/null || echo "No snacc-cli files found"
        echo
        echo "=== Target directory structure ==="
        find target -type f -name "*snacc*" 2>/dev/null || echo "No target directory or snacc files in target"
        echo
        echo "=== snacc-cli directory contents ==="
        ls -la snacc-cli/ 2>/dev/null || echo "No snacc-cli directory"
        echo
        echo "=== snacc-cli/target contents if exists ==="
        find snacc-cli/target -type f 2>/dev/null || echo "No snacc-cli/target directory"

    - name: Package binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ../../../${{ matrix.name }} snacc-cli.exe
        
    - name: Package binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../${{ matrix.name }} snacc-cli

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.target }}
        path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*/*.tar.gz artifacts/*/*.zip
        body: |
          ## Installation
          
          1. Download the appropriate archive for your platform
          2. Extract the binary: `tar -xzf snacc-cli-*.tar.gz` (or unzip on Windows)
          3. Move the binary to a directory in your PATH
          
          ## Platforms
          - `snacc-cli-linux-x64.tar.gz` - Linux x86_64
          - `snacc-cli-windows-x64.zip` - Windows x86_64  
          - `snacc-cli-macos-x64.tar.gz` - macOS Intel
          - `snacc-cli-macos-arm64.tar.gz` - macOS Apple Silicon
          
          ## Usage
          ```bash
          snacc-cli --help
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}