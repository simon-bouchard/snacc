name: Release

on:
  push:
    tags: ["v*"]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    
    strategy:
      matrix:
        platform:
          - name: Linux x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: snacc-cli
            archive: tar.gz
            installer: deb
          - name: Windows x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: snacc-cli.exe
            archive: zip
            installer: msi
          - name: macOS x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: snacc-cli
            archive: tar.gz
            installer: app
          - name: macOS ARM64
            os: macos-latest
            target: aarch64-apple-darwin
            bin: snacc-cli
            archive: tar.gz
            installer: app

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache cargo & target directories
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.platform.target }}

    - name: Install Linux dependencies
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

    - name: Install cargo-bundle (Linux/macOS)
      if: matrix.platform.installer == 'deb' || matrix.platform.installer == 'app'
      run: cargo install cargo-bundle

    - name: Install cargo-wix (Windows)
      if: matrix.platform.installer == 'msi'
      run: cargo install cargo-wix

    - name: Build binary
      run: cargo build --release --target ${{ matrix.platform.target }} --bin snacc-cli

    - name: Create installer (Windows MSI)
      if: matrix.platform.installer == 'msi'
      run: |
        # Initialize wix from workspace root, specifying the package
        if (!(Test-Path "snacc-cli/wix")) {
          cargo wix init --package snacc-cli --force
        }
        # Build MSI from workspace root, specifying package and target
        cargo wix --package snacc-cli --target ${{ matrix.platform.target }} --output target/wix/

    - name: Create installer (Linux DEB)
      if: matrix.platform.installer == 'deb'
      working-directory: ./snacc-cli
      run: cargo bundle --release --target ${{ matrix.platform.target }} --format deb

    - name: Create installer (macOS APP)
      if: matrix.platform.installer == 'app'
      working-directory: ./snacc-cli
      run: cargo bundle --release --target ${{ matrix.platform.target }}

    - name: Create archive
      shell: bash
      run: |
        binary_name=${{ matrix.platform.bin }}
        binary_path="target/${{ matrix.platform.target }}/release/${binary_name}"
        
        if [[ "${{ matrix.platform.archive }}" == "tar.gz" ]]; then
          archive_name="snacc-${{ matrix.platform.target }}.tar.gz"
          tar czvf "${archive_name}" -C "target/${{ matrix.platform.target }}/release" "${binary_name}"
        else
          archive_name="snacc-${{ matrix.platform.target }}.zip"
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            7z a "${archive_name}" "${binary_path}"
          else
            zip "${archive_name}" "${binary_path}"
          fi
        fi
        
        echo "ARCHIVE_NAME=${archive_name}" >> $GITHUB_ENV

    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: snacc-${{ matrix.platform.target }}
        path: ${{ env.ARCHIVE_NAME }}

    - name: Upload installer artifacts (Windows)
      if: matrix.platform.installer == 'msi'
      uses: actions/upload-artifact@v4
      with:
        name: snacc-installer-windows
        path: target/wix/*.msi

    - name: Upload installer artifacts (Linux)
      if: matrix.platform.installer == 'deb'
      uses: actions/upload-artifact@v4
      with:
        name: snacc-installer-linux
        path: target/${{ matrix.platform.target }}/release/bundle/deb/*.deb

    - name: Upload installer artifacts (macOS)
      if: matrix.platform.installer == 'app'
      uses: actions/upload-artifact@v4
      with:
        name: snacc-installer-macos-${{ matrix.platform.target }}
        path: target/${{ matrix.platform.target }}/release/bundle/osx/*.app

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/snacc-*/snacc-*
          artifacts/snacc-installer-*/*
        body: |
          ## Installation
          
          ### Windows
          Download and run the `.msi` installer.
          
          ### macOS
          Download the `.app` bundle and drag to Applications folder.
          
          ### Linux
          Download and install the `.deb` package:
          ```bash
          sudo dpkg -i snacc_*.deb
          ```
          
          Or download the binary archive and extract to your PATH.
          
          ## Changes
          See commit history for changes in this release.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}